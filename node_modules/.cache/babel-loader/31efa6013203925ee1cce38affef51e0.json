{"ast":null,"code":"var _jsxFileName = \"/Users/nasreenrazak/Documents/GitHub/invite/src/components/Countdown.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'reactstrap';\nexport default class Countdown extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      countDownDate: new Date(\"6 November 2021\"),\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n\n    this._renderTime = () => {\n      let display; // console.log(this.state.countDownDate);\n\n      display = /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.countdownNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, this.state.days), /*#__PURE__*/React.createElement(\"p\", {\n        style: styles.countdownText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, \"days\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.countdownNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, this.state.hours), /*#__PURE__*/React.createElement(\"p\", {\n        style: styles.countdownText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, \"hours\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.countdownNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, this.state.minutes), /*#__PURE__*/React.createElement(\"p\", {\n        style: styles.countdownText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, \"minutes\")), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: styles.countdownNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, this.state.seconds), /*#__PURE__*/React.createElement(\"p\", {\n        style: styles.countdownText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, \"seconds\")));\n      return display;\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      // code goes here\n      var now = new Date().getTime();\n      var timeleft = this.state.countDownDate - now;\n      var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n      var hours = Math.floor(timeleft % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      var minutes = Math.floor(timeleft % (1000 * 60 * 60) / (1000 * 60));\n      var seconds = Math.floor(timeleft % (1000 * 60) / 1000); // console.log(days, hours, minutes, seconds);\n\n      this.setState({\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      });\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"font-weight-bold text-uppercase m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Countdown\"), this._renderTime()), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nconst styles = {\n  countdownNumber: {\n    fontSize: '2rem',\n    fontwWight: 'bold'\n  },\n  countdownText: {\n    fontWeight: 'bold',\n    margin: '0'\n  }\n};","map":{"version":3,"sources":["/Users/nasreenrazak/Documents/GitHub/invite/src/components/Countdown.jsx"],"names":["React","Component","Row","Col","Countdown","state","countDownDate","Date","days","hours","minutes","seconds","_renderTime","display","styles","countdownNumber","countdownText","componentWillUnmount","clearInterval","myInterval","componentDidMount","setInterval","now","getTime","timeleft","Math","floor","setState","render","fontSize","fontwWight","fontWeight","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Row, Col } from 'reactstrap';\n\nexport default class Countdown extends Component {\n    state = { countDownDate: new Date(\"6 November 2021\"), days: 0, hours: 0, minutes: 0, seconds: 0 }\n\n    componentWillUnmount() {\n        clearInterval(this.myInterval);\n    }\n    componentDidMount() {\n        this.myInterval = setInterval(() => {\n            // code goes here\n            var now = new Date().getTime();\n            var timeleft = this.state.countDownDate - now;\n                \n            var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\n            // console.log(days, hours, minutes, seconds);\n\n            this.setState({ days: days, hours: hours, minutes: minutes, seconds: seconds })\n        }, 1000)\n    }\n    \n    _renderTime = () => {\n        let display\n        // console.log(this.state.countDownDate);\n\n        display =\n        <Row>\n            <Col>\n                <div style={styles.countdownNumber}>{this.state.days}</div>\n                <p style={styles.countdownText}>days</p>\n            </Col>\n            <Col>\n                <div style={styles.countdownNumber}>{this.state.hours}</div>\n                <p style={styles.countdownText}>hours</p>\n            </Col>\n            <Col>\n                <div style={styles.countdownNumber}>{this.state.minutes}</div>\n                <p style={styles.countdownText}>minutes</p>\n            </Col>\n            <Col>\n                <div style={styles.countdownNumber}>{this.state.seconds}</div>\n                <p style={styles.countdownText}>seconds</p>\n            </Col>\n        </Row>\n\n        return display\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"App-section\">\n                    <h3 className=\"font-weight-bold text-uppercase m-0\">Countdown</h3>\n                    {this._renderTime()}\n                </div>\n                \n                <hr/>\n            </>\n        )\n    }\n}\n\nconst styles = {\n    countdownNumber: {\n        fontSize: '2rem',\n        fontwWight:'bold'\n    },\n    countdownText: {\n        fontWeight:'bold',\n        margin: '0'\n    }\n}\n"]},"metadata":{},"sourceType":"module"}